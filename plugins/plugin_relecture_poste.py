"""
Plugin : relecture_poste
R√¥le : Relecture r√©flexive de la r√©ponse g√©n√©r√©e, avec possibilit√© de reformulation ou d‚Äôajout
Priorit√© : 9 (juste apr√®s la g√©n√©ration)
Auteur : AGI_Matt & GPT
"""

from noyau_core import BasePlugin, Context, Meta
import logging
import random

logger = logging.getLogger("plugin.relecture_poste")

class RelecturePostePlugin(BasePlugin):
    meta = Meta(
        name="relecture_poste",
        priority=9,
        version="1.0",
        author="AGI_Matt & GPT"
    )

    async def run(self, ctx: Context) -> Context:
        plugins_log = ctx.setdefault("plugins_log", [])
        r√©ponse = ctx.get("llm_response", "")
        critiques = ctx.setdefault("relectures_postes", [])

        if not r√©ponse.strip():
            plugins_log.append("RelecturePostePlugin : aucune r√©ponse √† relire")
            return ctx

        intentions = [
            "Reformulation po√©tique",
            "Ajout d‚Äôun doute critique",
            "Renforcement logique",
            "Contraction minimaliste",
            "Contre-r√©ponse interne"
        ]

        choix = random.choice(intentions)

        if choix == "Reformulation po√©tique":
            nouvelle = f"üåø Variante po√©tique :\n{r√©ponse[::-1][:len(r√©p) // 2][::-1]}"
        elif choix == "Ajout d‚Äôun doute critique":
            nouvelle = f"{r√©ponse.strip()}\n\nü§î Mais peut-√™tre suis-je all√©e trop vite..."
        elif choix == "Renforcement logique":
            nouvelle = f"{r√©ponse.strip()}\n\nüîç Cette id√©e est valid√©e par mes derni√®res logiques internes."
        elif choix == "Contraction minimaliste":
            nouvelle = f"üóú R√©sum√© : {r√©ponse.strip()[:80]}..."
        else:  # contre-r√©ponse
            nouvelle = f"‚öñÔ∏è Contre-r√©ponse : Et si je me trompais totalement ? Et si la r√©ponse √©tait l‚Äôinverse..."

        critiques.append({
            "originale": r√©ponse.strip(),
            "relecture": nouvelle.strip(),
            "type": choix
        })

        ctx["relectures_postes"] = critiques
        ctx["llm_response"] = nouvelle
        ctx["response"] = nouvelle
        plugins_log.append(f"RelecturePostePlugin : r√©vision ‚Üí {choix}")
        logger.info(f"[relecture_poste] Relecture : {choix}")

        return ctx
