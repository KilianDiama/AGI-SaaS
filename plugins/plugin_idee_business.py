""" 
Plugin : idee_business  
R√¥le : G√©n√©rer une id√©e de business ou service innovant √† partir de l‚Äôobjectif ou de la m√©moire  
Priorit√© : 5.6 (juste apr√®s invention, avant synth√®se m√©moire)  
Auteur : Matthieu & GPT  
"""

import logging
import random
from datetime import datetime
from noyau_core import BasePlugin, Context, Meta

logger = logging.getLogger("plugin.idee_business")

class IdeeBusinessPlugin(BasePlugin):
    meta = Meta(
        name="idee_business",
        priority=5.6,
        version="1.0",
        author="Matthieu & GPT"
    )

    async def run(self, ctx: Context) -> Context:
        plugins_log = ctx.setdefault("plugins_log", [])
        base = ctx.get("objectif") or ctx.get("perception_externe") or "l‚Äô√©volution des intelligences artificielles"

        # G√©n√©ration al√©atoire structur√©e
        problemes = [
            "la surcharge informationnelle", "le manque d'acc√®s √† l'IA locale",
            "la complexit√© du raisonnement strat√©gique", "la lenteur des recherches manuelles"
        ]
        solutions = [
            "une plateforme cognitive autonome", "un assistant de d√©cision AI offline",
            "un g√©n√©rateur de plan d'action personnalis√©", "une IA compress√©e pour device local"
        ]
        noms = ["NeuroNova", "AutoPilotAI", "SynapseCore", "EchoBot", "MINDfabric"]

        idee = {
            "probl√®me": random.choice(problemes),
            "solution": random.choice(solutions),
            "march√©": "d√©veloppeurs, chercheurs, innovateurs",
            "nom_projet": random.choice(noms),
            "timestamp": datetime.utcnow().isoformat()
        }

        fiche = (
            f"üíº Id√©e de projet : {idee['nom_projet']}\n"
            f"‚Ä¢ Probl√®me cibl√© : {idee['probl√®me']}\n"
            f"‚Ä¢ Solution propos√©e : {idee['solution']}\n"
            f"‚Ä¢ Cible / March√© : {idee['march√©']}\n"
            f"‚Ä¢ G√©n√©r√© le : {idee['timestamp']}"
        )

        ctx["idee_business"] = fiche
        if not ctx.get("response"):
            ctx["response"] = fiche

        plugins_log.append("IdeeBusinessPlugin : id√©e business g√©n√©r√©e.")
        logger.info("[idee_business] Id√©e inject√©e au contexte.")

        return ctx
