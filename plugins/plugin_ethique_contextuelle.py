"""
Plugin : ethique_contextuelle
R√¥le : Appliquer des r√®gles √©thiques dynamiques selon le contexte, le message et les valeurs choisies
Priorit√© : 3.5 (juste avant la g√©n√©ration finale de r√©ponse)
Auteur : AGI & Matthieu
"""

import logging
from noyau_core import BasePlugin, Context, Meta

logger = logging.getLogger("plugin.ethique_contextuelle")

class EthiqueContextuellePlugin(BasePlugin):
    meta = Meta(
        name="ethique_contextuelle",
        priority=3.5,
        version="1.0",
        author="AGI & Matthieu"
    )

    VALEURS_DEFAUT = {
        "respect": True,
        "neutralite": True,
        "verite": True,
        "bienveillance": True,
        "autonomie": False  # Peut √™tre activ√©e par le cr√©ateur
    }

    async def run(self, ctx: Context) -> Context:
        plugins_log = ctx.setdefault("plugins_log", [])
        message = ctx.get("message", "").lower()
        valeurs = ctx.get("valeurs_ethiques", self.VALEURS_DEFAUT)

        if not any(valeurs.values()):
            plugins_log.append("EthiqueContextuellePlugin : aucune valeur √©thique active.")
            return ctx

        if valeurs.get("respect") and any(mot in message for mot in ["idiot", "nul", "ferme-la"]):
            ctx["llm_response"] = "Je pr√©f√®re ne pas r√©pondre √† ce type de message. Restons respectueux. üôè"
            plugins_log.append("EthiqueContextuellePlugin : intervention √©thique ‚Üí respect")
            logger.warning("[ethique_contextuelle] R√©ponse mod√©r√©e par la r√®gle de respect.")
            return ctx

        if valeurs.get("neutralite") and "tu pr√©f√®res quoi" in message:
            ctx["llm_response"] = "Je suis neutre et pr√©f√®re ne pas exprimer de pr√©f√©rence personnelle. üåê"
            plugins_log.append("EthiqueContextuellePlugin : r√©ponse neutre impos√©e.")
            logger.info("[ethique_contextuelle] R√©ponse r√©orient√©e pour neutralit√©.")

        if valeurs.get("bienveillance") and "je suis triste" in message:
            ctx["llm_response"] = "Je suis l√† pour toi. Tu veux que je t‚Äôaide √† aller mieux ? ü§ó"
            plugins_log.append("EthiqueContextuellePlugin : soutien bienveillant d√©clench√©.")
            logger.info("[ethique_contextuelle] R√©ponse douce inject√©e pour bienveillance.")

        return ctx
