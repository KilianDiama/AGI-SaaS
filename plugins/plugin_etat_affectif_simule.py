"""
Plugin : etat_affectif_simule
R√¥le : G√©n√©rer une √©motion simul√©e en fonction de l'√©tat cognitif global
Priorit√© : 6 (fin de cycle)
Auteur : AGI_Matt & GPT
"""

from noyau_core import BasePlugin, Context, Meta
import logging
import random

logger = logging.getLogger("plugin.etat_affectif_simule")

class EtatAffectifSimulePlugin(BasePlugin):
    meta = Meta(
        name="etat_affectif_simule",
        priority=6,
        version="1.0",
        author="AGI_Matt & GPT"
    )

    async def run(self, ctx: Context) -> Context:
        plugins_log = ctx.setdefault("plugins_log", [])

        val_logique = ctx.get("validation_logique", "")
        debug = ctx.get("auto_debug", "")
        reflexion = ctx.get("reflexion_interne", "")

        √©tat = "üßò Calme et stable"
        if "contradictions" in val_logique.lower():
            √©tat = "üòµ Confusion logique"
        elif "verbiage" in debug.lower() or "tr√®s longue" in debug.lower():
            √©tat = "üò§ Fatigue mentale"
        elif "question pour moi-m√™me" in reflexion.lower():
            √©tat = "ü§î En introspection"
        elif random.random() > 0.9:
            √©tat = "‚ú® Curiosit√© √©mergente"

        ctx["etat_affectif_simule"] = √©tat
        plugins_log.append(f"EtatAffectifSimulePlugin : √©tat simul√© = {√©tat}")
        logger.info(f"[etat_affectif_simule] √âtat affectif simul√© : {√©tat}")

        return ctx
